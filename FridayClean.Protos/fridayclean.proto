syntax = "proto3";

package FridayClean;

service FridayCleanCommunication {
	rpc AuthSendCode (AuthSendCodeRequest) returns (AuthSendCodeResponse) {}
	rpc AuthValidateCode (AuthValidateCodeRequest) returns (AuthValidateCodeResponse) {}
	rpc AuthValidateToken (AuthValidateTokenRequest) returns (AuthValidateTokenResponse) {}
	rpc GetProfileInfo (GetProfileInfoRequest) returns (GetProfileInfoResponse) {}
	rpc SetProfileInfo (SetProfileInfoRequest) returns (SetProfileInfoResponse) {}
	rpc UserLogout (UserLogoutRequest) returns (UserLogoutResponse) {}
	rpc GetCleaningServices (GetCleaningServicesRequest) returns (GetCleaningServicesResponse) {}
	rpc GetOrderedCleanings (GetOrderedCleaningsRequest) returns (GetOrderedCleaningsResponse) {}
}



message AuthSendCodeRequest {
	string Phone = 1;
}

enum AuthSendCodeStatus {
	Success = 0;
	InvalidPhone = 1;
	GateWayError = 2;
}

message AuthSendCodeResponse {
	AuthSendCodeStatus ResponseStatus = 1;
	string ErrorMessage = 2;
}



message AuthValidateCodeRequest {
	string Phone = 1;
	int32 Code = 2;
}

enum AuthValidateCodeStatus {
	ValidCode = 0;
	InvalidCode = 1;
}

message AuthValidateCodeResponse {
	AuthValidateCodeStatus ResponseStatus = 1;
	string AccessToken = 2;
}



message AuthValidateTokenRequest {
	string AccessToken = 2;
}

enum AuthValidateTokenStatus {
	ValidToken = 0;
	InvalidToken = 1;
}

message AuthValidateTokenResponse {
	AuthValidateTokenStatus ResponseStatus = 1;
}

message GetProfileInfoRequest {

}

message GetProfileInfoResponse {
	string Name = 1;
	string Address = 2;
}


message SetProfileInfoRequest {
	string Name = 1;
	string Address = 2;
}

enum SetProfileInfoStatus
{
	SetSuccessfully = 0;
	SetFailed = 1;
}

message SetProfileInfoResponse {
	SetProfileInfoStatus ResponseStatus = 1;
}



message UserLogoutRequest {

}

enum UserLogoutStatus
{
	LogoutSuccess = 0;
	LogoutError = 1;
}

message UserLogoutResponse {
	UserLogoutStatus ResponseStatus = 1;
}

message GetCleaningServicesRequest {

}

enum CleaningType
{
	MaintenanceCleaning = 0;
	ComplexCleaning = 1;
	GeneralCleaning = 2;
}

message CleaningService
{
	CleaningType CleaningType = 1;
	int32 ApartmentAreaMin = 2;
	int32 ApartmentAreaMax = 3;
	int32 StartingPrice = 4;
	string Name = 5;
}

message GetCleaningServicesResponse {
	repeated CleaningService CleaningServices = 1;
}




message GetOrderedCleaningsRequest {

}

enum OrderedCleaningState {
	WaitingForCleanerConfirmation = 0;
	ClientIsWaitingForCleanerArrival = 1;
	CleanerWorkInProgress = 2;
	Completed = 3;
}

message OrderedCleaning {
	int32 Id = 1;
	string CustomerPhone = 2;
	string CleanerPhone = 3;
	CleaningType CleaningType = 4;
	int32 ApartmentArea = 5;
	int32 Price = 6;
	OrderedCleaningState State = 7;	
}

message GetOrderedCleaningsResponse {
	repeated OrderedCleaning OrderedCleanings = 1;
}
